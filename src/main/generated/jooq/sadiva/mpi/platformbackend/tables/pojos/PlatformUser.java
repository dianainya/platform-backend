/*
 * This file is generated by jOOQ.
 */
package jooq.sadiva.mpi.platformbackend.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlatformUser implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID userId;
    private String username;
    private String password;
    private Boolean activated;

    public PlatformUser() {}

    public PlatformUser(PlatformUser value) {
        this.userId = value.userId;
        this.username = value.username;
        this.password = value.password;
        this.activated = value.activated;
    }

    public PlatformUser(
        UUID userId,
        String username,
        String password,
        Boolean activated
    ) {
        this.userId = userId;
        this.username = username;
        this.password = password;
        this.activated = activated;
    }

    /**
     * Getter for <code>public.platform_user.user_id</code>.
     */
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.platform_user.user_id</code>.
     */
    public PlatformUser setUserId(UUID userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>public.platform_user.username</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>public.platform_user.username</code>.
     */
    public PlatformUser setUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Getter for <code>public.platform_user.password</code>.
     */
    @NotNull
    @Size(max = 100)
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>public.platform_user.password</code>.
     */
    public PlatformUser setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>public.platform_user.activated</code>.
     */
    public Boolean getActivated() {
        return this.activated;
    }

    /**
     * Setter for <code>public.platform_user.activated</code>.
     */
    public PlatformUser setActivated(Boolean activated) {
        this.activated = activated;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PlatformUser other = (PlatformUser) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.activated == null) {
            if (other.activated != null)
                return false;
        }
        else if (!this.activated.equals(other.activated))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.activated == null) ? 0 : this.activated.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PlatformUser (");

        sb.append(userId);
        sb.append(", ").append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(activated);

        sb.append(")");
        return sb.toString();
    }
}
