/*
 * This file is generated by jOOQ.
 */
package jooq.sadiva.mpi.platformbackend.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Product implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String name;
    private Integer calories;
    private Integer proteins;
    private Integer fats;
    private Integer carbohydrates;
    private Integer weight;

    public Product() {}

    public Product(Product value) {
        this.id = value.id;
        this.name = value.name;
        this.calories = value.calories;
        this.proteins = value.proteins;
        this.fats = value.fats;
        this.carbohydrates = value.carbohydrates;
        this.weight = value.weight;
    }

    public Product(
        UUID id,
        String name,
        Integer calories,
        Integer proteins,
        Integer fats,
        Integer carbohydrates,
        Integer weight
    ) {
        this.id = id;
        this.name = name;
        this.calories = calories;
        this.proteins = proteins;
        this.fats = fats;
        this.carbohydrates = carbohydrates;
        this.weight = weight;
    }

    /**
     * Getter for <code>s283945.product.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>s283945.product.id</code>.
     */
    public Product setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>s283945.product.name</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>s283945.product.name</code>.
     */
    public Product setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>s283945.product.calories</code>.
     */
    @NotNull
    public Integer getCalories() {
        return this.calories;
    }

    /**
     * Setter for <code>s283945.product.calories</code>.
     */
    public Product setCalories(Integer calories) {
        this.calories = calories;
        return this;
    }

    /**
     * Getter for <code>s283945.product.proteins</code>.
     */
    @NotNull
    public Integer getProteins() {
        return this.proteins;
    }

    /**
     * Setter for <code>s283945.product.proteins</code>.
     */
    public Product setProteins(Integer proteins) {
        this.proteins = proteins;
        return this;
    }

    /**
     * Getter for <code>s283945.product.fats</code>.
     */
    @NotNull
    public Integer getFats() {
        return this.fats;
    }

    /**
     * Setter for <code>s283945.product.fats</code>.
     */
    public Product setFats(Integer fats) {
        this.fats = fats;
        return this;
    }

    /**
     * Getter for <code>s283945.product.carbohydrates</code>.
     */
    @NotNull
    public Integer getCarbohydrates() {
        return this.carbohydrates;
    }

    /**
     * Setter for <code>s283945.product.carbohydrates</code>.
     */
    public Product setCarbohydrates(Integer carbohydrates) {
        this.carbohydrates = carbohydrates;
        return this;
    }

    /**
     * Getter for <code>s283945.product.weight</code>.
     */
    @NotNull
    public Integer getWeight() {
        return this.weight;
    }

    /**
     * Setter for <code>s283945.product.weight</code>.
     */
    public Product setWeight(Integer weight) {
        this.weight = weight;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Product other = (Product) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.calories == null) {
            if (other.calories != null)
                return false;
        }
        else if (!this.calories.equals(other.calories))
            return false;
        if (this.proteins == null) {
            if (other.proteins != null)
                return false;
        }
        else if (!this.proteins.equals(other.proteins))
            return false;
        if (this.fats == null) {
            if (other.fats != null)
                return false;
        }
        else if (!this.fats.equals(other.fats))
            return false;
        if (this.carbohydrates == null) {
            if (other.carbohydrates != null)
                return false;
        }
        else if (!this.carbohydrates.equals(other.carbohydrates))
            return false;
        if (this.weight == null) {
            if (other.weight != null)
                return false;
        }
        else if (!this.weight.equals(other.weight))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.calories == null) ? 0 : this.calories.hashCode());
        result = prime * result + ((this.proteins == null) ? 0 : this.proteins.hashCode());
        result = prime * result + ((this.fats == null) ? 0 : this.fats.hashCode());
        result = prime * result + ((this.carbohydrates == null) ? 0 : this.carbohydrates.hashCode());
        result = prime * result + ((this.weight == null) ? 0 : this.weight.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Product (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(calories);
        sb.append(", ").append(proteins);
        sb.append(", ").append(fats);
        sb.append(", ").append(carbohydrates);
        sb.append(", ").append(weight);

        sb.append(")");
        return sb.toString();
    }
}
