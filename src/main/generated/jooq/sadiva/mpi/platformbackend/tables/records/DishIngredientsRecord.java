/*
 * This file is generated by jOOQ.
 */
package jooq.sadiva.mpi.platformbackend.tables.records;


import jakarta.validation.constraints.NotNull;

import java.util.UUID;

import jooq.sadiva.mpi.platformbackend.tables.DishIngredients;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DishIngredientsRecord extends UpdatableRecordImpl<DishIngredientsRecord> implements Record3<UUID, UUID, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>s283945.dish_ingredients.product_id</code>.
     */
    public DishIngredientsRecord setProductId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>s283945.dish_ingredients.product_id</code>.
     */
    @NotNull
    public UUID getProductId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>s283945.dish_ingredients.dish_id</code>.
     */
    public DishIngredientsRecord setDishId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>s283945.dish_ingredients.dish_id</code>.
     */
    @NotNull
    public UUID getDishId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>s283945.dish_ingredients.amount</code>.
     */
    public DishIngredientsRecord setAmount(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>s283945.dish_ingredients.amount</code>.
     */
    public Integer getAmount() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, UUID, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return DishIngredients.DISH_INGREDIENTS.PRODUCT_ID;
    }

    @Override
    public Field<UUID> field2() {
        return DishIngredients.DISH_INGREDIENTS.DISH_ID;
    }

    @Override
    public Field<Integer> field3() {
        return DishIngredients.DISH_INGREDIENTS.AMOUNT;
    }

    @Override
    public UUID component1() {
        return getProductId();
    }

    @Override
    public UUID component2() {
        return getDishId();
    }

    @Override
    public Integer component3() {
        return getAmount();
    }

    @Override
    public UUID value1() {
        return getProductId();
    }

    @Override
    public UUID value2() {
        return getDishId();
    }

    @Override
    public Integer value3() {
        return getAmount();
    }

    @Override
    public DishIngredientsRecord value1(UUID value) {
        setProductId(value);
        return this;
    }

    @Override
    public DishIngredientsRecord value2(UUID value) {
        setDishId(value);
        return this;
    }

    @Override
    public DishIngredientsRecord value3(Integer value) {
        setAmount(value);
        return this;
    }

    @Override
    public DishIngredientsRecord values(UUID value1, UUID value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DishIngredientsRecord
     */
    public DishIngredientsRecord() {
        super(DishIngredients.DISH_INGREDIENTS);
    }

    /**
     * Create a detached, initialised DishIngredientsRecord
     */
    public DishIngredientsRecord(UUID productId, UUID dishId, Integer amount) {
        super(DishIngredients.DISH_INGREDIENTS);

        setProductId(productId);
        setDishId(dishId);
        setAmount(amount);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DishIngredientsRecord
     */
    public DishIngredientsRecord(jooq.sadiva.mpi.platformbackend.tables.pojos.DishIngredients value) {
        super(DishIngredients.DISH_INGREDIENTS);

        if (value != null) {
            setProductId(value.getProductId());
            setDishId(value.getDishId());
            setAmount(value.getAmount());
            resetChangedOnNotNull();
        }
    }
}
