/*
 * This file is generated by jOOQ.
 */
package jooq.sadiva.mpi.platformbackend.tables.records;


import jakarta.validation.constraints.NotNull;

import java.util.UUID;

import jooq.sadiva.mpi.platformbackend.tables.DishReceipt;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DishReceiptRecord extends UpdatableRecordImpl<DishReceiptRecord> implements Record4<UUID, UUID, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dish_receipt.product_id</code>.
     */
    public DishReceiptRecord setProductId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.dish_receipt.product_id</code>.
     */
    @NotNull
    public UUID getProductId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.dish_receipt.dish_id</code>.
     */
    public DishReceiptRecord setDishId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.dish_receipt.dish_id</code>.
     */
    @NotNull
    public UUID getDishId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.dish_receipt.weight</code>.
     */
    public DishReceiptRecord setWeight(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.dish_receipt.weight</code>.
     */
    @NotNull
    public Integer getWeight() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.dish_receipt.amount</code>.
     */
    public DishReceiptRecord setAmount(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.dish_receipt.amount</code>.
     */
    public Integer getAmount() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, UUID, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, UUID, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return DishReceipt.DISH_RECEIPT.PRODUCT_ID;
    }

    @Override
    public Field<UUID> field2() {
        return DishReceipt.DISH_RECEIPT.DISH_ID;
    }

    @Override
    public Field<Integer> field3() {
        return DishReceipt.DISH_RECEIPT.WEIGHT;
    }

    @Override
    public Field<Integer> field4() {
        return DishReceipt.DISH_RECEIPT.AMOUNT;
    }

    @Override
    public UUID component1() {
        return getProductId();
    }

    @Override
    public UUID component2() {
        return getDishId();
    }

    @Override
    public Integer component3() {
        return getWeight();
    }

    @Override
    public Integer component4() {
        return getAmount();
    }

    @Override
    public UUID value1() {
        return getProductId();
    }

    @Override
    public UUID value2() {
        return getDishId();
    }

    @Override
    public Integer value3() {
        return getWeight();
    }

    @Override
    public Integer value4() {
        return getAmount();
    }

    @Override
    public DishReceiptRecord value1(UUID value) {
        setProductId(value);
        return this;
    }

    @Override
    public DishReceiptRecord value2(UUID value) {
        setDishId(value);
        return this;
    }

    @Override
    public DishReceiptRecord value3(Integer value) {
        setWeight(value);
        return this;
    }

    @Override
    public DishReceiptRecord value4(Integer value) {
        setAmount(value);
        return this;
    }

    @Override
    public DishReceiptRecord values(UUID value1, UUID value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DishReceiptRecord
     */
    public DishReceiptRecord() {
        super(DishReceipt.DISH_RECEIPT);
    }

    /**
     * Create a detached, initialised DishReceiptRecord
     */
    public DishReceiptRecord(UUID productId, UUID dishId, Integer weight, Integer amount) {
        super(DishReceipt.DISH_RECEIPT);

        setProductId(productId);
        setDishId(dishId);
        setWeight(weight);
        setAmount(amount);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DishReceiptRecord
     */
    public DishReceiptRecord(jooq.sadiva.mpi.platformbackend.tables.pojos.DishReceipt value) {
        super(DishReceipt.DISH_RECEIPT);

        if (value != null) {
            setProductId(value.getProductId());
            setDishId(value.getDishId());
            setWeight(value.getWeight());
            setAmount(value.getAmount());
            resetChangedOnNotNull();
        }
    }
}
