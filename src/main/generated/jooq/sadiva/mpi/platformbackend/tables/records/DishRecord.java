/*
 * This file is generated by jOOQ.
 */
package jooq.sadiva.mpi.platformbackend.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;
import java.util.UUID;

import jooq.sadiva.mpi.platformbackend.tables.Dish;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DishRecord extends UpdatableRecordImpl<DishRecord> implements Record6<UUID, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>s283945.dish.id</code>.
     */
    public DishRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>s283945.dish.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>s283945.dish.name</code>.
     */
    public DishRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>s283945.dish.name</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>s283945.dish.receipt</code>.
     */
    public DishRecord setReceipt(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>s283945.dish.receipt</code>.
     */
    public String getReceipt() {
        return (String) get(2);
    }

    /**
     * Setter for <code>s283945.dish.description</code>.
     */
    public DishRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>s283945.dish.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>s283945.dish.created_at</code>.
     */
    public DishRecord setCreatedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>s283945.dish.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>s283945.dish.updated_at</code>.
     */
    public DishRecord setUpdatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>s283945.dish.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<UUID, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Dish.DISH.ID;
    }

    @Override
    public Field<String> field2() {
        return Dish.DISH.NAME;
    }

    @Override
    public Field<String> field3() {
        return Dish.DISH.RECEIPT;
    }

    @Override
    public Field<String> field4() {
        return Dish.DISH.DESCRIPTION;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Dish.DISH.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Dish.DISH.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getReceipt();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getReceipt();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public DishRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public DishRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public DishRecord value3(String value) {
        setReceipt(value);
        return this;
    }

    @Override
    public DishRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public DishRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public DishRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public DishRecord values(UUID value1, String value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DishRecord
     */
    public DishRecord() {
        super(Dish.DISH);
    }

    /**
     * Create a detached, initialised DishRecord
     */
    public DishRecord(UUID id, String name, String receipt, String description, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Dish.DISH);

        setId(id);
        setName(name);
        setReceipt(receipt);
        setDescription(description);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DishRecord
     */
    public DishRecord(jooq.sadiva.mpi.platformbackend.tables.pojos.Dish value) {
        super(Dish.DISH);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setReceipt(value.getReceipt());
            setDescription(value.getDescription());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
