/*
 * This file is generated by jOOQ.
 */
package jooq.sadiva.mpi.platformbackend.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.OffsetDateTime;
import java.util.UUID;

import jooq.sadiva.mpi.platformbackend.tables.Platform;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlatformRecord extends UpdatableRecordImpl<PlatformRecord> implements Record7<UUID, String, String, String, Integer, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>s283945.platform.id</code>.
     */
    public PlatformRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>s283945.platform.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>s283945.platform.code</code>.
     */
    public PlatformRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>s283945.platform.code</code>.
     */
    @NotNull
    @Size(max = 20)
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>s283945.platform.name</code>.
     */
    public PlatformRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>s283945.platform.name</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>s283945.platform.description</code>.
     */
    public PlatformRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>s283945.platform.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>s283945.platform.floor_amount</code>.
     */
    public PlatformRecord setFloorAmount(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>s283945.platform.floor_amount</code>.
     */
    @NotNull
    public Integer getFloorAmount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>s283945.platform.created_at</code>.
     */
    public PlatformRecord setCreatedAt(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>s283945.platform.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>s283945.platform.updated_at</code>.
     */
    public PlatformRecord setUpdatedAt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>s283945.platform.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, String, Integer, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, String, Integer, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Platform.PLATFORM.ID;
    }

    @Override
    public Field<String> field2() {
        return Platform.PLATFORM.CODE;
    }

    @Override
    public Field<String> field3() {
        return Platform.PLATFORM.NAME;
    }

    @Override
    public Field<String> field4() {
        return Platform.PLATFORM.DESCRIPTION;
    }

    @Override
    public Field<Integer> field5() {
        return Platform.PLATFORM.FLOOR_AMOUNT;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return Platform.PLATFORM.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return Platform.PLATFORM.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Integer component5() {
        return getFloorAmount();
    }

    @Override
    public OffsetDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public Integer value5() {
        return getFloorAmount();
    }

    @Override
    public OffsetDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public PlatformRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public PlatformRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public PlatformRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public PlatformRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public PlatformRecord value5(Integer value) {
        setFloorAmount(value);
        return this;
    }

    @Override
    public PlatformRecord value6(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PlatformRecord value7(OffsetDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PlatformRecord values(UUID value1, String value2, String value3, String value4, Integer value5, OffsetDateTime value6, OffsetDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlatformRecord
     */
    public PlatformRecord() {
        super(Platform.PLATFORM);
    }

    /**
     * Create a detached, initialised PlatformRecord
     */
    public PlatformRecord(UUID id, String code, String name, String description, Integer floorAmount, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Platform.PLATFORM);

        setId(id);
        setCode(code);
        setName(name);
        setDescription(description);
        setFloorAmount(floorAmount);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PlatformRecord
     */
    public PlatformRecord(jooq.sadiva.mpi.platformbackend.tables.pojos.Platform value) {
        super(Platform.PLATFORM);

        if (value != null) {
            setId(value.getId());
            setCode(value.getCode());
            setName(value.getName());
            setDescription(value.getDescription());
            setFloorAmount(value.getFloorAmount());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
