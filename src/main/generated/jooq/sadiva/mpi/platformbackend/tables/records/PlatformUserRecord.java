/*
 * This file is generated by jOOQ.
 */
package jooq.sadiva.mpi.platformbackend.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.util.UUID;

import jooq.sadiva.mpi.platformbackend.tables.PlatformUser;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlatformUserRecord extends UpdatableRecordImpl<PlatformUserRecord> implements Record4<UUID, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.platform_user.user_id</code>.
     */
    public PlatformUserRecord setUserId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.platform_user.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.platform_user.username</code>.
     */
    public PlatformUserRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.platform_user.username</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.platform_user.password</code>.
     */
    public PlatformUserRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.platform_user.password</code>.
     */
    @NotNull
    @Size(max = 100)
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.platform_user.activated</code>.
     */
    public PlatformUserRecord setActivated(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.platform_user.activated</code>.
     */
    public Boolean getActivated() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, String, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return PlatformUser.PLATFORM_USER.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return PlatformUser.PLATFORM_USER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return PlatformUser.PLATFORM_USER.PASSWORD;
    }

    @Override
    public Field<Boolean> field4() {
        return PlatformUser.PLATFORM_USER.ACTIVATED;
    }

    @Override
    public UUID component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public Boolean component4() {
        return getActivated();
    }

    @Override
    public UUID value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public Boolean value4() {
        return getActivated();
    }

    @Override
    public PlatformUserRecord value1(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public PlatformUserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public PlatformUserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public PlatformUserRecord value4(Boolean value) {
        setActivated(value);
        return this;
    }

    @Override
    public PlatformUserRecord values(UUID value1, String value2, String value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlatformUserRecord
     */
    public PlatformUserRecord() {
        super(PlatformUser.PLATFORM_USER);
    }

    /**
     * Create a detached, initialised PlatformUserRecord
     */
    public PlatformUserRecord(UUID userId, String username, String password, Boolean activated) {
        super(PlatformUser.PLATFORM_USER);

        setUserId(userId);
        setUsername(username);
        setPassword(password);
        setActivated(activated);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PlatformUserRecord
     */
    public PlatformUserRecord(jooq.sadiva.mpi.platformbackend.tables.pojos.PlatformUser value) {
        super(PlatformUser.PLATFORM_USER);

        if (value != null) {
            setUserId(value.getUserId());
            setUsername(value.getUsername());
            setPassword(value.getPassword());
            setActivated(value.getActivated());
            resetChangedOnNotNull();
        }
    }
}
