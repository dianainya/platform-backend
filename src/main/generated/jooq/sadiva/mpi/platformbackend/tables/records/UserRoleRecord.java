/*
 * This file is generated by jOOQ.
 */
package jooq.sadiva.mpi.platformbackend.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.util.UUID;

import jooq.sadiva.mpi.platformbackend.tables.UserRole;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoleRecord extends UpdatableRecordImpl<UserRoleRecord> implements Record2<UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>s283945.user_role.user_id</code>.
     */
    public UserRoleRecord setUserId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>s283945.user_role.user_id</code>.
     */
    @NotNull
    public UUID getUserId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>s283945.user_role.role</code>.
     */
    public UserRoleRecord setRole(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>s283945.user_role.role</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getRole() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return UserRole.USER_ROLE.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return UserRole.USER_ROLE.ROLE;
    }

    @Override
    public UUID component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getRole();
    }

    @Override
    public UUID value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getRole();
    }

    @Override
    public UserRoleRecord value1(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserRoleRecord value2(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UserRoleRecord values(UUID value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRoleRecord
     */
    public UserRoleRecord() {
        super(UserRole.USER_ROLE);
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(UUID userId, String role) {
        super(UserRole.USER_ROLE);

        setUserId(userId);
        setRole(role);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(jooq.sadiva.mpi.platformbackend.tables.pojos.UserRole value) {
        super(UserRole.USER_ROLE);

        if (value != null) {
            setUserId(value.getUserId());
            setRole(value.getRole());
            resetChangedOnNotNull();
        }
    }
}
